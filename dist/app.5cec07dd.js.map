{"version":3,"sources":["src/core/router.ts","src/core/api.ts","src/core/view.ts","src/page/amiibo.ts","src/page/home.ts","src/bag.ts","src/app.ts"],"names":[],"mappings":";;;;;AKEA,IAAM,WAAW,GAAG,8UAApB;AAcA,AHdA,IGcM,AHdN,IAAA,WGcqB,GAAG,qaAAxB;AHdA;AGmCA,AHnCA,IGmCA,GAAA,KHnCA;AGmCA,AH7BI,WAAA,IAAA,CAAY,WAAZ,EAAkC,QAAlC,EAAmD;AG6BvD,AH7BI,QAAA,IG6BJ,CH7BI,GAAA,IAAA;AGmCA,WAAA,GAAA,CAAY,WAAZ,EAAkC,WAAlC,EAAsD;AC3C1D,AD2CI,AHxBU,IInBd,ID2CI,CHxBU,GInBd,CD2CI,EC3CJ,CD2CI,GHxBU,CGwBV,EHxBuB,QInB3B,CAAA,GJmB2B,IInB3B,CAAA,eAAA,CAAA,CAAA;AJoBQ,UAAI,KAAI,CAAC,SAAT,EAAoB;AInB5B,AD2CQ,AHvBI,IIpBZ,IJoBY,CGuBC,GC3Cb,CJoBgB,CAAC,CIpBjB,GD2CQ,GAAiB,EAAjB,AHvBI,CAAe,MIpB3B,CAAA,EJoBY,GAA2B,EIpBvC,CAAA,EJoB2C,CAAC,YIpB5C,CAAA,CAAA,AJoBY;AGwBJ,AHvBI,QGuBE,AHvBF,KAAI,CAAC,UGuBa,GAAG,CHvBrB,GAAsB,IGuBO,CAAC,AHvBJ,CAAC,QAA3B,KGuBqB,CAAwB,WAAxB,CAAzB;AC3CR,AJqBS,IIrBT,GJkBQ,GIlBR,GAAA,AJqBe,eIrBf,CAAA,OAAA,CAAA,aAAA,CAAA,CAAA;AD4CQ,AHtBI,QGsBA,AHtBA,CGsBC,MHtBM,CAAC,GAAR,CAAY,KGsBhB,EAAuB,sBHtBnB;AIrBZ,AD4CY,AHtBH,IItBT,KAAA,GAAA,AD4CkB,eC5ClB,CAAA,OAAA,CAAA,MD4CY,CC5CZ,CAAA,CAAA,EAGA;AD0CS,AHtBJ,KAPS;;AIZd,AD0CQ,AHrBM,IIrBR,ID0CQ,CHrBA,CIrBF,GAAG,GJqBD,CIrBK,EJqBK,KGqBM,CC1CX,CAAA,CD0Cc,EHrBR,IIrBV,EAAf,AD0CyC,CAAC,GHrBlB,EAAoB,SGqBX,CAAwB,WAAxB,CAAzB;ACzCR,AJqBQ,IIrBF,EJqBE,CIrBC,GAAG,CJqBA,CAAC,EIrBG,KAAA,CAAA,AJqBR,CAAc,IAAd,CAAmB,CIrBf,CAAQ,QJqBZ,GIrBI,EAAqB,YAArB,CAAZ,EACA;ADyCQ,AL/CR,AE2BK,IF3BL,CEyBc,GGsBF,CAAC,CL/Cb,eK+CQ,EAAuB;ACxC/B,ADyCY,ALhDZ,IMOM,QAAQ,ADyCI,GCzCD,IAAI,MAAA,CAAA,OAAJ,CAAa,GDyClB,GCzCK,EAAqB,GAArB,CAAjB;AACA,ADyCS,ALjDT,AE6Bc,IIrBR,KJqBQ,GF7Bd,EMQgB,EJqBF,CIrBK,EJqBK,EIrBD,QAAA,CAAA,CJqBC,MIrBL,CAAe,MAAf,EAAuB,GAAvB,CAAnB,EACA;AACA,ANLI,AEyBI,UAAM,CFzBV,MAAA,CEyBkB,EFzBlB,CEyBqB,KAAI,CAAC,QAAL,CAAc,IAAd,CAAmB,EAAnB,CAAjB;AGoBA,AL7CJ,QAAA,CK6CS,IL7CT,GAAA,EK6CI,EL7CJ,CK6CqB,gBAAjB;ACtCR,ADuCQ,AHpBA,MInBF,AJmBE,CInBD,EDuCM,EHpBD,CAAC,MGoBL,GCvCR,ADuCyB,CCvCH,GJmBd,KInBR,GACA,IDsCQ;AACA,ALxCJ,SKwCS,ALxCT,cAAA,GAAiB,EKwCb,GAA2B,KAAK,ALxClB,IAAD,EAAY,GKwCE,CAAe,SAAf,CAAyB,MAApD;ACtCR,ADuCQ,ALxCA,AEmBA,MIlBF,ANDE,CMCD,EDuCM,ELxCD,CAAC,CEmBE,KGqBP,CCvCR,ADuCuB,CCvCH,CJkBZ,GFnBA,GAAoB,CMC5B,EAA8B,KDuCtB,CAAgC,ECvCxC,KDuCQ,EAAyC,YAAA;ACtCjD,ADuCY,ALxCA,AEmBP,KAJS,CIdR,ADuCM,CCvCL,CNDK,GKwCI,CAAC,ALxCD,EAAG,EKwCP,ALzCgB,GME5B,CAAoB,UAApB,EAAgC,UAAhC,GACA;ADuCS,ALxCG,KKsCJ,GLtCI,IAAI,EAAG;AMGnB,ADsCK,AL3CuB,AEsBhB,MIjBN,CAAC,ANLC,EEsBI,GIjBZ,IACA,MJgBY,GAAgB,YAAA;AIf5B,ANHK,AEmBG,KFxBJ,CEwBI,KAAI,CAAC,QAAL,GAAgB,EAAhB;AIfR,ADqCI,AHrBC,EGqBD,GAAA,AHvBQ,CGuBR,SAAA,CAAA,IAAA,GAAA,YAAA;AAAA,ALvCA,QKuCA,CLvCA,IKuCA,GAAA,IAAA,CLvCA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","file":"app.5cec07dd.js","sourceRoot":"..","sourcesContent":["import { Amiibo, RouteInfo } from \"../model/types\";\nimport View from \"./view\";\n\nexport default class Router {\n    private routeTable : RouteInfo[];\n    private defaultRoute : RouteInfo | null;\n    private pathStack : Amiibo[];\n\n    constructor() {\n        window.addEventListener('hashchange', this.route.bind(this));\n        this.routeTable = [];\n        this.defaultRoute = null;\n        this.pathStack = [];\n    }\n\n    setDefaultPage = (page : View) : void => {\n        this.defaultRoute = {\n            path : '',\n            page : page\n        }\n    }\n\n    addRoutePath = (path : string, page : View) : void => {\n        this.routeTable.push({\n            path,\n            page,\n        });\n    }\n\n    route = () : void => {\n        const routePath = location.hash;\n        if(routePath == '' && this.defaultRoute) {\n            this.defaultRoute.page.render();\n        }\n\n        for (const routeInfo of this.routeTable) {\n            if (routePath.indexOf(routeInfo.path) >= 0) {\n                routeInfo.page.render();\n                break;\n            }\n        }\n    }\n}","import { Amiibo, AmiiboResponse } from \"../model/types\";\n\nexport class Api {\n    url : string;\n\n    constructor(url : string) {\n        this.url = url;\n    }\n\n    protected async request<AjaxResponse>() : Promise<AjaxResponse> {\n        const response = await fetch(this.url)\n        return await response.json() as AjaxResponse;\n    }\n}\n\nexport class AmiiboListApi extends Api {\n    async getData() : Promise<AmiiboResponse> {\n        return this.request<AmiiboResponse>();\n    }\n}\n\n// export class Api {\n//     url;\n\n//     constructor(url) {\n//         this.url = url;\n//     }\n\n//     async request() {\n//         const response = await fetch(this.url);\n//         return await response.json();\n//     }\n// }","import { Amiibo } from \"../model/types\";\n\nexport default abstract class View {\n    private template : string;\n    private renderTemplate : string;\n    private container : HTMLElement;\n    private htmlList : string[];\n\n    constructor(containerId : string, template : string) {\n        const containerElement = document.getElementById(containerId);\n        if (!containerElement) {\n            throw \"최상위 컨테이너가 없어 UI를 진행하지 못합니다.\";\n        }\n        this.container = containerElement;\n        this.template = template;\n        this.renderTemplate = template;\n        this.htmlList = [];\n    }\n\n    protected updateView = () : void => {\n        if (this.container) {\n            this.container.innerHTML = this.renderTemplate;\n            this.renderTemplate = this.template;\n        } else {\n            console.log(\"최상위 컨테이너가 없어 UI를 진행하지 못합니다.\");\n        }\n    }\n\n    protected addHtml = (htmlString : string) : void => {\n        this.htmlList.push(htmlString);\n    }\n\n    protected getHtml = () : string => {\n        const snapshot = this.htmlList.join('')\n        this.clearHtmlList();\n        return snapshot;\n    }\n\n    private clearHtmlList = () : void => {\n        this.htmlList = [];\n    }\n\n    protected setTemplateData = (key : string, value : string) : void => {\n        this.renderTemplate = this.renderTemplate.replace(`@${key}`, value);\n    }\n\n    abstract render() : void;\n}","import { AmiiboListApi } from \"../core/api\";\nimport View from \"../core/view\";\nimport { Amiibo } from \"../model/types\";\nimport Path from \"../bag\";\n\nconst AMIIBO_URL = \"https://www.amiiboapi.com/api/amiibo/?gameseries=@game_series\"\n\nconst template = `\n    <div\n        class = \"container\">\n        @amiibo_list\n    </div>\n`;\n\nconst itemTemplate = `\n    <div\n        class = \"line-amiibo\">\n        <div\n            class = \"item-amiibo\">\n            <img\n                class = \"item-amiibo-img\"\n                src = \"@amiibo_img_left\"\n                alt = \"mario..\"/>\n            <div\n                class = \"item-amiibo-text\"\n                id = \"item-amiibo-text-head\">\n                    @amiibo_name_left\n            </div>\n            <div\n                class = \"item-amiibo-text\">\n                    @game_series_left\n            </div>\n            <div\n                class = \"item-amiibo-text\">\n                    @release_date_left\n            </div>\n        </div>\n        <div\n            class = \"item-amiibo\">\n            <img\n                class = \"item-amiibo-img\"\n                src = \"@amiibo_img_right\"\n                alt = \"mario..\"/>\n            <div\n                class = \"item-amiibo-text\"\n                id = \"item-amiibo-text-head\">\n                    @amiibo_name_right\n            </div>\n            <div\n                class = \"item-amiibo-text\">\n                    @game_series_right\n            </div>\n            <div\n                class = \"item-amiibo-text\">\n                    @release_date_right\n            </div>\n        </div>\n    </div>\n`;\n\nexport default class AmiiboView extends View {\n    private _gameSeries : string;\n    private _amiibos : Amiibo[];\n    private _bag : Path;\n\n    constructor(containerId : string, path : Path) {\n        super(containerId, template);\n        this._gameSeries = \"\";\n        this._amiibos = [];\n        this._bag = path;\n    }\n\n    render = async () : Promise<void> => {\n        this.gameSeries = location.hash.slice(9);\n        const api = new AmiiboListApi(AMIIBO_URL.replace('@game_series', this.gameSeries));\n        this.amiibos = await (await api.getData()).amiibo;\n        \n        let tempItem = itemTemplate;\n        for (let i = 0 ; i < this.amiibos.length ; i ++) {\n            const { gameSeries, image, name, release } = this.amiibos[i];\n            if (i % 2 == 0) {\n                tempItem = tempItem.replace(\"@amiibo_img_left\", image);\n                tempItem = tempItem.replace(\"@amiibo_name_left\", name);\n                tempItem = tempItem.replace(\"@game_series_left\", gameSeries);\n                tempItem = tempItem.replace(\"@release_date_left\", release.jp);\n                if (i + 1 == this.amiibos.length) {\n                    // 눈속임용 ㅠㅠ\n                    tempItem = tempItem.replace(\"@amiibo_img_right\", \"https://upload.wikimedia.org/wikipedia/commons/thumb/7/70/Solid_white.svg/2048px-Solid_white.svg.png\");\n                    tempItem = tempItem.replace(\"@amiibo_name_right\", \"\");\n                    tempItem = tempItem.replace(\"@game_series_right\", \"\");\n                    tempItem = tempItem.replace(\"@release_date_right\", \"\");\n                    this.addHtml(tempItem);\n                }\n            } else {\n                tempItem = tempItem.replace(\"@amiibo_img_right\", image);\n                tempItem = tempItem.replace(\"@amiibo_name_right\", name);\n                tempItem = tempItem.replace(\"@game_series_right\", gameSeries);\n                tempItem = tempItem.replace(\"@release_date_right\", release.jp);\n                this.addHtml(tempItem);\n                tempItem = itemTemplate;\n            }\n            \n        }\n\n        this.setTemplateData('amiibo_list', this.getHtml());\n        this.updateView();\n\n        const amiibos = document.querySelectorAll(\".item-amiibo\");\n        amiibos.forEach((e, index) => {\n            if (e != null) {\n                e.addEventListener(\"click\", () => {\n                    this._bag.pushBagStack(this.amiibos[index]);\n                    const bagButton = document.getElementById(\"bag-button\");\n                    if(bagButton) {\n                        bagButton.innerHTML = String(this._bag.getBagSize());\n                    }\n                });\n            }\n        })\n    }\n\n    set gameSeries(series : string) {\n        switch(series) {\n            case \"mario\":\n                this._gameSeries = \"Super Mario\";\n                break;\n            case \"zelda\":\n                this._gameSeries = \"The Legend of Zelda\";\n                break;\n            case \"donkey\":\n                this._gameSeries = \"Donkey Kong\";\n                break;\n            case \"kirby\":\n                this._gameSeries = \"Kirby\";\n                break;\n            case \"pokemon\":\n                this._gameSeries = \"Pokemon\";\n                break;\n            case \"animal\":\n                this._gameSeries = \"Animal Crossing\";\n                break;\n            default:\n                break;\n        }\n    }\n\n    get gameSeries() : string {\n        return this._gameSeries;\n    }\n\n    set amiibos(array : Amiibo[]) {\n        this._amiibos = array;\n    }\n\n    get amiibos() : Amiibo[] {\n        return this._amiibos;\n    }\n}","import View from \"../core/view\";\nimport Bag from \"../bag\";\n\nconst template = `\n    <div\n        class = \"container\">\n        <div\n            class = \"title\">nintendo amiibo</div>\n        <div>\n        <div\n            class = \"line-img\">\n            <a \n                class = \"img-home-box\"\n                id = \"img-mario\"\n                href=\"#/amiibo/mario\">\n            </a>\n            <a\n                class = \"img-home-box\"\n                id = \"img-zelda\"\n                href=\"#/amiibo/zelda\"></a>\n        </div>\n        <div\n            class = \"line-img\">\n            <a\n                class = \"img-home-box\"\n                id = \"img-donkey\"\n                href=\"#/amiibo/donkey\"></a>\n            <a\n                class = \"img-home-box\"\n                id = \"img-kirby\"\n                href=\"#/amiibo/kirby\"></a>\n        </div>\n        <div\n            class = \"line-img\">\n            <a\n                class = \"img-home-box\"\n                id = \"img-pokemon\"\n                href=\"#/amiibo/pokemon\"></a>\n            <a\n                class = \"img-home-box\"\n                id = \"img-animal\"\n                href=\"#/amiibo/animal\"></a>\n        </div>\n    </div>\n`;\n\nexport default class HomeView extends View {\n    private bag : Bag;\n\n    constructor(containerId : string, bag : Bag) {\n        super(containerId, template);\n        this.bag = bag;\n    }\n\n    render = () : void => {\n        this.updateView();\n    }\n}","import { Amiibo } from \"./model/types\";\n\nconst bagTemplate = `\n<div id = \"bag\">\n    <div id = \"bag-content\">\n        <div id = \"bag-list\">\n            @bag_item\n        </div>\n        <div class = \"button-section\">\n            <div id = \"buy-button\">구매하기</div>\n            <div id = \"close-button\">닫기</div>\n        </div>\n    </div>\n</div>\n`;\n\nconst bagItemTemplate = `\n<div id = \"bag-item\">\n    <img\n        class = \"bag-item-img\" \n        src = \"@amiibo_img\"/>\n    <div\n        class = \"item-amiibo-text\"\n        id = \"item-amiibo-text-head\">\n            @amiibo_name\n    </div>\n    <div\n        class = \"item-amiibo-text\">\n            @game_series\n    </div>\n    <div\n        class = \"item-amiibo-text\">\n            @release_date\n    </div>    \n</div>\n`;\n\nexport default class Bag {\n    private _bagStack : Amiibo[];\n    private bagButton : HTMLElement;\n    private container : HTMLElement;\n    private _existingHtmlLength : number;\n    \n    constructor(containerId : string, bagButtonId : string) {\n        this._bagStack = [];\n        const containerElement = document.getElementById(containerId);\n        if (!containerElement) {\n            throw \"다이얼로그 컨테이너 id가 없어 진행하지 못합니다.\";\n        }\n        const bagButtonElement = document.getElementById(bagButtonId);\n        if (!bagButtonElement) {\n            throw \"가방버튼의 id가 없어 진행하지 못합니다.\";\n        }\n        this.bagButton = bagButtonElement;\n        this.container = containerElement;\n        this._existingHtmlLength = this.container.innerHTML.length;\n        this.bagButton.addEventListener(\"click\", () => {\n            this.show();\n        });\n    }\n\n    show() {\n        const itemsHtml : string[] = [];\n        this.bagStack.forEach(item => {\n            let renderItemTemplate = bagItemTemplate;\n            renderItemTemplate = renderItemTemplate.replace('@amiibo_img', item.image);\n            renderItemTemplate = renderItemTemplate.replace('@amiibo_name', item.name);\n            renderItemTemplate = renderItemTemplate.replace('@game_series', item.gameSeries);\n            renderItemTemplate = renderItemTemplate.replace('@release_date', item.release.jp);\n            itemsHtml.push(renderItemTemplate);\n        });\n        this.container.innerHTML += bagTemplate.replace('@bag_item', itemsHtml.join(''));\n        document.getElementById('close-button')?.addEventListener('click', () => {\n            this.container.innerHTML = this.container.innerHTML.replace(bagTemplate.replace('@bag_item', itemsHtml.join('')), \"\");\n        });\n    }\n\n    pushBagStack(item : Amiibo) : void {\n        this._bagStack.push(item);\n    }\n\n    get bagStack() : Amiibo[] {\n        return this._bagStack;\n    }\n\n    getBagSize() : number {\n        return this._bagStack.length;\n    }\n\n    get existingHtmlLength() : number {\n        return this._existingHtmlLength;\n    }\n\n\n}","import Router from \"./core/router\";\nimport AmiiboView from \"./page/amiibo\";\nimport HomeView from \"./page/home\";\nimport Bag from \"./bag\";\n\n\n// 시작\nconst router = new Router();\nconst bag = new Bag('container', 'bag-button');\n// Router의 생성자 실행 -> 해시 체인지 리스너 실행.\nconst homeView = new HomeView('root', bag);\nconst amiiboView = new AmiiboView('root', bag);\n// containerId인 root와 각 뷰에서 만든 템플릿을 View의 생성자에 전달\n// View의 생성자에서 이것들을 저장.\n\nrouter.setDefaultPage(homeView);\n// Router의 defaultRoute에 path ''와 view를 homeView로 설정\nrouter.addRoutePath(\"/home/\", homeView);\nrouter.addRoutePath(\"/amiibo/\", amiiboView);\n// routeTable에 각 path와 view등록\n\nrouter.route();\n// this.defaultRoute.page.render(); 실행\n// 즉 homeView의 render 실행\n// updateView실행 -> container인 root에 innerHTML로 저장되어어있는 템플릿 화면에 표시"]}