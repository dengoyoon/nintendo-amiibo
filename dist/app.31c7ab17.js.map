{"version":3,"sources":["src/core/router.ts","src/core/api.ts","src/core/view.ts","src/page/amiibo.ts","src/page/home.ts","src/app.ts"],"names":[],"mappings":"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","file":"app.31c7ab17.js","sourceRoot":"..","sourcesContent":["import { RouteInfo } from \"../model/types\";\nimport View from \"./view\";\n\nexport default class Router {\n    private routeTable : RouteInfo[];\n    private defaultRoute : RouteInfo | null;\n\n    constructor() {\n        window.addEventListener('hashchange', this.route.bind(this));\n        this.routeTable = [];\n        this.defaultRoute = null;\n    }\n\n    setDefaultPage = (page : View) : void => {\n        this.defaultRoute = {\n            path : '',\n            page : page\n        }\n    }\n\n    addRoutePath = (path : string, page : View) : void => {\n        this.routeTable.push({\n            path,\n            page,\n        });\n    }\n\n    route = () : void => {\n        const routePath = location.hash;\n        if(routePath == '' && this.defaultRoute) {\n            this.defaultRoute.page.render();\n        }\n\n        for (const routeInfo of this.routeTable) {\n            if (routePath.indexOf(routeInfo.path) >= 0) {\n                routeInfo.page.render();\n                break;\n            }\n        }\n    }\n}","import { Amiibo, AmiiboResponse } from \"../model/types\";\n\nexport class Api {\n    url : string;\n\n    constructor(url : string) {\n        this.url = url;\n    }\n\n    protected async request<AjaxResponse>() : Promise<AjaxResponse> {\n        const response = await fetch(this.url)\n        return await response.json() as AjaxResponse;\n    }\n}\n\nexport class AmiiboListApi extends Api {\n    async getData() : Promise<AmiiboResponse> {\n        return this.request<AmiiboResponse>();\n    }\n}","export default abstract class View {\n    private template : string;\n    private renderTemplate : string;\n    private container : HTMLElement;\n    private htmlList : string[];\n\n    constructor(containerId : string, template : string) {\n        const containerElement = document.getElementById(containerId);\n        if (!containerElement) {\n            throw \"최상위 컨테이너가 없어 UI를 진행하지 못합니다.\";\n        }\n        this.container = containerElement;\n        this.template = template;\n        this.renderTemplate = template;\n        this.htmlList = [];\n    }\n\n    protected updateView = () : void => {\n        if (this.container) {\n            this.container.innerHTML = this.renderTemplate;\n            this.renderTemplate = this.template;\n        } else {\n            console.log(\"최상위 컨테이너가 없어 UI를 진행하지 못합니다.\");\n        }\n    }\n\n    protected addHtml = (htmlString : string) : void => {\n        this.htmlList.push(htmlString);\n    }\n\n    protected getHtml = () : string => {\n        const snapshot = this.htmlList.join('')\n        this.clearHtmlList();\n        return snapshot;\n    }\n\n    private clearHtmlList = () : void => {\n        this.htmlList = [];\n    }\n\n    protected setTemplateData = (key : string, value : string) : void => {\n        this.renderTemplate = this.renderTemplate.replace(`@${key}`, value);\n    }\n\n    abstract render() : void;\n}","import { AmiiboListApi } from \"../core/api\";\nimport View from \"../core/view\";\nimport { Amiibo } from \"../model/types\";\n\nconst AMIIBO_URL = \"https://www.amiiboapi.com/api/amiibo/?gameseries=@game_series\"\n\nconst template = `\n    <div\n        class = \"container\">\n        @amiibo_list\n    </div>\n`;\n\nconst itemTemplate = `\n    <div\n        class = \"line-amiibo\">\n        <div\n            class = \"item-amiibo\">\n            <img\n                class = \"item-amiibo-img\"\n                src = \"@amiibo_img_left\"\n                alt = \"mario..\"/>\n            <div\n                class = \"item-amiibo-text\"\n                id = \"item-amiibo-text-head\">\n                    @amiibo_name_left\n            </div>\n            <div\n                class = \"item-amiibo-text\">\n                    @game_series_left\n            </div>\n            <div\n                class = \"item-amiibo-text\">\n                    @release_date_left\n            </div>\n        </div>\n        <div\n            class = \"item-amiibo\">\n            <img\n                class = \"item-amiibo-img\"\n                src = \"@amiibo_img_right\"\n                alt = \"mario..\"/>\n            <div\n                class = \"item-amiibo-text\"\n                id = \"item-amiibo-text-head\">\n                    @amiibo_name_right\n            </div>\n            <div\n                class = \"item-amiibo-text\">\n                    @game_series_right\n            </div>\n            <div\n                class = \"item-amiibo-text\">\n                    @release_date_right\n            </div>\n        </div>\n    </div>\n`;\n\nexport default class AmiiboView extends View {\n    private _gameSeries : string;\n    private _amiibos : Amiibo[];\n\n    constructor(containerId : string) {\n        super(containerId, template);\n        this._gameSeries = \"\";\n        this._amiibos = [];\n    }\n\n    render = async () : Promise<void> => {\n        this.gameSeries = location.hash.slice(9);\n        const api = new AmiiboListApi(AMIIBO_URL.replace('@game_series', this.gameSeries));\n        this.amiibos = await (await api.getData()).amiibo;\n        \n        let tempItem = itemTemplate;\n        for (let i = 0 ; i < this.amiibos.length ; i ++) {\n            const { gameSeries, image, name, release } = this.amiibos[i];\n            if (i % 2 == 0) {\n                tempItem = tempItem.replace(\"@amiibo_img_left\", image);\n                tempItem = tempItem.replace(\"@amiibo_name_left\", name);\n                tempItem = tempItem.replace(\"@game_series_left\", gameSeries);\n                tempItem = tempItem.replace(\"@release_date_left\", release.jp);\n                if (i + 1 == this.amiibos.length) {\n                    // 눈속임용 ㅠㅠ\n                    tempItem = tempItem.replace(\"@amiibo_img_right\", \"https://upload.wikimedia.org/wikipedia/commons/thumb/7/70/Solid_white.svg/2048px-Solid_white.svg.png\");\n                    tempItem = tempItem.replace(\"@amiibo_name_right\", \"\");\n                    tempItem = tempItem.replace(\"@game_series_right\", \"\");\n                    tempItem = tempItem.replace(\"@release_date_right\", \"\");\n                    this.addHtml(tempItem);\n                }\n            } else {\n                tempItem = tempItem.replace(\"@amiibo_img_right\", image);\n                tempItem = tempItem.replace(\"@amiibo_name_right\", name);\n                tempItem = tempItem.replace(\"@game_series_right\", gameSeries);\n                tempItem = tempItem.replace(\"@release_date_right\", release.jp);\n                this.addHtml(tempItem);\n                tempItem = itemTemplate;\n            }\n            \n        }\n\n        this.setTemplateData('amiibo_list', this.getHtml());\n        this.updateView();\n    }\n\n    set gameSeries(series : string) {\n        switch(series) {\n            case \"mario\":\n                this._gameSeries = \"Super Mario\";\n                break;\n            case \"zelda\":\n                this._gameSeries = \"The Legend of Zelda\";\n                break;\n            case \"donkey\":\n                this._gameSeries = \"Donkey Kong\";\n                break;\n            case \"kirby\":\n                this._gameSeries = \"Kirby\";\n                break;\n            case \"pokemon\":\n                this._gameSeries = \"Pokemon\";\n                break;\n            case \"animal\":\n                this._gameSeries = \"Animal Crossing\";\n                break;\n            default:\n                break;\n        }\n    }\n\n    get gameSeries() : string {\n        return this._gameSeries;\n    }\n\n    set amiibos(array : Amiibo[]) {\n        this._amiibos = array;\n    }\n\n    get amiibos() : Amiibo[] {\n        return this._amiibos;\n    }\n}","import View from \"../core/view\";\n\nconst template = `\n    <div\n        class = \"container\">\n        <div\n            class = \"title\">nintendo amiibo</div>\n        <div>\n        <div\n            class = \"line-img\">\n            <a \n                class = \"img-home-box\"\n                id = \"img-mario\"\n                href=\"#/amiibo/mario\">\n            </a>\n            <a\n                class = \"img-home-box\"\n                id = \"img-zelda\"\n                href=\"#/amiibo/zelda\"></a>\n        </div>\n        <div\n            class = \"line-img\">\n            <a\n                class = \"img-home-box\"\n                id = \"img-donkey\"\n                href=\"#/amiibo/donkey\"></a>\n            <a\n                class = \"img-home-box\"\n                id = \"img-kirby\"\n                href=\"#/amiibo/kirby\"></a>\n        </div>\n        <div\n            class = \"line-img\">\n            <a\n                class = \"img-home-box\"\n                id = \"img-pokemon\"\n                href=\"#/amiibo/pokemon\"></a>\n            <a\n                class = \"img-home-box\"\n                id = \"img-animal\"\n                href=\"#/amiibo/animal\"></a>\n        </div>\n    </div>\n`;\n\nexport default class HomeView extends View {\n    constructor(containerId : string) {\n        super(containerId, template);\n    }\n\n    render = () : void => {\n        \n        this.updateView();\n    }\n}","import Router from \"./core/router\";\nimport AmiiboView from \"./page/amiibo\";\nimport HomeView from \"./page/home\";\n\nconst router = new Router();\nconst homeView = new HomeView('root');\nconst amiiboView = new AmiiboView('root');\n\nrouter.setDefaultPage(homeView);\nrouter.addRoutePath(\"/home/\", homeView);\nrouter.addRoutePath(\"/amiibo/\", amiiboView);\n\nrouter.route();"]}